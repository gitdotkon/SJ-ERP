<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd	
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
	<aop:aspectj-autoproxy/> 
	<context:component-scan base-package="com.deere" />
	<bean id="property" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:conf.properties</value>
			</list>
		</property>

	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">


		<property name="url" value="${url}"></property>
		<property name="driverClassName" value="${driverClassName}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>

	</bean>


	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop> -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>

		<property name="annotatedClasses">
			<list>
				<value>com.deere.model.User</value>
				<value>com.deere.model.GenericPart</value>
				<value>com.deere.model.BOMTree</value>
				<value>com.deere.model.Inventory</value>
				<value>com.deere.model.Stock</value>
				<value>com.deere.model.ProductionOrderItem</value>
				<value>com.deere.model.ProductionOrder</value>
				<value>com.deere.model.Log</value>
				<value>com.deere.model.SystemLog</value>
				<value>com.deere.model.SalesOrder</value>
				<value>com.deere.model.Customer</value>
				<value>com.deere.model.SalesOrderItem</value>
				<value>com.deere.model.MRPModel</value>
				<value>com.deere.model.ProductionDetail</value>
				<value>com.deere.model.dto.ProductionDto</value>
			</list>
		</property>

	</bean>

	<!-- Transaction Manager -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- AOP -->
	<!-- Define exceptions -->
	<!-- Transaction Manager -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="update*" read-only="false" propagation="REQUIRED" />
			<tx:method name="delete*" read-only="false" propagation="REQUIRED" />
			<tx:method name="save*" read-only="false" propagation="REQUIRED" />
			<tx:method name="send*" read-only="false" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.deere.service.impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>

	<!-- DAO component -->
	<bean id="daoTemplate" abstract="true" lazy-init="true">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="bomTreeDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.BOMTree" />
	</bean>
	
	<bean id="partDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.GenericPart" />
	</bean>
	
	<bean id="inventoryDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.Inventory" />
	</bean>
	
	<bean id="stockDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.Stock" />
	</bean>
	
	
	<bean id="StockdtoDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.dto.PartDto" />
	</bean>

	<bean id="userDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.User" />
	</bean>
	<bean id="logDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.Log" />
	</bean>
	
	<bean id="systemLogDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.SystemLog" />
	</bean>
	
	<bean id="proOrderDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.ProductionOrder" />
	</bean>
	
	<bean id="proItemDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.ProductionOrderItem" />
	</bean>
	
	<bean id="SODao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.SalesOrder" />
	</bean>
	
	<bean id="SOItemDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.SalesOrderItem" />
	</bean>
	
	<bean id="MRPDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.MRPModel" />
	</bean>
	<bean id="customerDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.Customer" />
	</bean>
	<bean id="proDtoDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.dto.ProductionDto" />
	</bean>
	
	<bean id="productionDetailDao" class="com.deere.dao.impl.GenericDaoHibernateImpl" parent="daoTemplate">
		<constructor-arg value="com.deere.model.ProductionDetail" />
	</bean>

	<!-- Service component -->
	



	<context:component-scan base-package="com.deere.service"></context:component-scan>
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>

</beans>		